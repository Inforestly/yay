local CoreGui = game:GetService('CoreGui')
local Players = game:GetService('Players')
local LP = Players.LocalPlayer
local RS = game:GetService('ReplicatedStorage')
local WS = game:GetService('Workspace')
local UIS = game:GetService('UserInputService')
local vu = game:GetService('VirtualUser')
local TS = game:GetService('TweenService')

local RE = RS.Shared.Framework.Network.Remote.RemoteEvent

function createCorner(radius)
    local corner = Instance.new('UICorner')
    corner.CornerRadius = UDim.new(0, radius)
    return corner
end

local ScreenGui = Instance.new('ScreenGui')
ScreenGui.Name = 'EclipseHub'
ScreenGui.ResetOnSpawn = false
ScreenGui.IgnoreGuiInset = true
ScreenGui.Parent = CoreGui

local mainFrame = Instance.new('Frame')
mainFrame.Size = UDim2.new(0, 500, 0, 550)
mainFrame.Position = UDim2.new(0, 50, 0, 50)
mainFrame.BackgroundColor3 = Color3.fromRGB(36, 41, 46)
mainFrame.BorderSizePixel = 0
mainFrame.BackgroundTransparency = 0
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Parent = ScreenGui
createCorner(14).Parent = mainFrame

local title = Instance.new('TextLabel')
title.Size = UDim2.new(1, 0, 0, 45)
title.BackgroundTransparency = 1
title.Text = 'üåü Eclipse Hub v7.14b'
title.Font = Enum.Font.GothamBold
title.TextSize = 18
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Parent = mainFrame

local tabFrame = Instance.new('Frame')
tabFrame.Size = UDim2.new(1, 0, 0, 38)
tabFrame.Position = UDim2.new(0, 0, 0, 50)
tabFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
tabFrame.BackgroundTransparency = 1
tabFrame.BorderSizePixel = 0
tabFrame.Parent = mainFrame
createCorner(8).Parent = tabFrame

local listLayout = Instance.new('UIListLayout')
listLayout.SortOrder = Enum.SortOrder.LayoutOrder
listLayout.Padding = UDim.new(0, 4)
listLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
listLayout.VerticalAlignment = Enum.VerticalAlignment.Center
listLayout.FillDirection = Enum.FillDirection.Horizontal
listLayout.Parent = tabFrame

function createTab(name)
    local tab = Instance.new('TextButton')
    tab.Size = UDim2.new(0, 135, 1, 0)
    tab.BackgroundColor3 = Color3.fromRGB(43, 49, 55)
    tab.TextColor3 = Color3.fromRGB(255, 255, 255)
    tab.Font = Enum.Font.GothamBold
    tab.TextSize = 16

    tab.Text = name
    tab.AutoButtonColor = false
    tab.Parent = tabFrame
    createCorner(8).Parent = tab
    return tab
end

local pages = {}
function createPage()
    local page = Instance.new('ScrollingFrame')
    page.Size = UDim2.new(0.98, 0, 1, -90)
    page.Position = UDim2.new(0, 0, 0, 89)
    page.CanvasSize = UDim2.new(0, 0, 0, 1000)
    page.ScrollBarThickness = 6
    page.BackgroundTransparency = 1
    page.BorderSizePixel = 0
    page.Visible = false
    page.Parent = mainFrame
    return page
end

pages.Automation = createPage()
pages.Hatching = createPage()
pages.Misc = createPage()

function switchToTab(tabName)
    for name, page in pairs(pages) do
        page.Visible = (name == tabName)
    end
end

local automationTab = createTab('üöÄ Automation')
automationTab.MouseButton1Click:Connect(function()
    switchToTab('Automation')
end)

local hatchingTab = createTab('ü•ö Hatching / Rifts')
hatchingTab.MouseButton1Click:Connect(function()
    switchToTab('Hatching')
end)

local miscTab = createTab('‚öôÔ∏è Misc')
miscTab.MouseButton1Click:Connect(function()
    switchToTab('Misc')
end)

switchToTab('Automation')

local yOffsets = { Automation = 5, Hatching = 5, Misc = 5 }
function addToPage(tabName, element)
    local page = pages[tabName]
    element.Position = UDim2.new(0, 35, 0, yOffsets[tabName])
    element.Parent = page
    yOffsets[tabName] += element.Size.Y.Offset + 10
end

function createSectionTitle(tab, text)
    local label = Instance.new('TextLabel')
    label.Size = UDim2.new(0, 400, 0, 35)
    label.BackgroundTransparency = 1
    label.Text = text
    label.Font = Enum.Font.GothamBold
    label.TextSize = 20
    label.TextColor3 = Color3.fromRGB(0, 170, 255)
    label.TextXAlignment = Enum.TextXAlignment.Center
    addToPage(tab, label)
end

function createText(tab, text)
    local label = Instance.new('TextLabel')
    label.Size = UDim2.new(0, 400, 0, 35)
    label.BackgroundTransparency = 1
    label.Text = text
    label.Font = Enum.Font.GothamBold
    label.TextSize = 18
    label.TextScaled = true
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.TextXAlignment = Enum.TextXAlignment.Center
    addToPage(tab, label)
end

function createToggleButton(tab, name, flagRef)
    local button = Instance.new('TextButton')
    button.Size = UDim2.new(0, 400, 0, 40)
    button.BackgroundColor3 = Color3.fromRGB(43, 49, 55)
    button.TextColor3 = Color3.fromRGB(220, 220, 220)
    button.Font = Enum.Font.GothamBold
    button.TextSize = 17
    button.Text = name .. ': OFF'
    button.AutoButtonColor = false
    createCorner(8).Parent = button

    button.MouseEnter:Connect(function()
        button.BackgroundColor3 = Color3.fromRGB(45, 186, 78)
    end)
    button.MouseLeave:Connect(function()
        if not flagRef.state then
            button.BackgroundColor3 = Color3.fromRGB(43, 49, 55)
        end
    end)

    button.MouseButton1Click:Connect(function()
        flagRef.state = not flagRef.state
        button.Text = name .. ': ' .. (flagRef.state and 'ON' or 'OFF')
        button.BackgroundColor3 = flagRef.state and Color3.fromRGB(45, 186, 78)
            or Color3.fromRGB(43, 49, 55)
    end)

    addToPage(tab, button)
    return button
end

function createButton(tab, name, callback)
    local button = Instance.new('TextButton')
    button.Size = UDim2.new(0, 400, 0, 40)
    button.BackgroundColor3 = Color3.fromRGB(43, 49, 55)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Font = Enum.Font.GothamBold
    button.TextSize = 17
    button.Text = name
    button.AutoButtonColor = false
    createCorner(10).Parent = button

    button.MouseEnter:Connect(function()
        button.BackgroundColor3 = Color3.fromRGB(45, 186, 78)
    end)
    button.MouseLeave:Connect(function()
        button.BackgroundColor3 = Color3.fromRGB(43, 49, 55)
    end)

    button.MouseButton1Click:Connect(function()
        if callback then
            callback()
        end
    end)

    addToPage(tab, button)
    return button
end

local flags = {
    autoShops = { state = false },
    autoBubble = { state = false },
    autoChest = { state = false },
    autoHatch = { state = false },
    autoUseKeys = { state = false },
    autoPlaytime = { state = false },
}

createSectionTitle('Automation', 'üîπ Automation')
createToggleButton('Automation', 'Auto Shops', flags.autoShops)
createToggleButton('Automation', 'Auto Bubble', flags.autoBubble)
createToggleButton('Automation', 'Auto Chests', flags.autoChest)
createToggleButton('Automation', 'Auto Use Keys', flags.autoUseKeys)
createToggleButton('Automation', 'Auto Playtime', flags.autoPlaytime)

createSectionTitle('Hatching', 'üîπ Hatching / Rift Teleportation')

local eggBox = Instance.new('TextBox')
eggBox.Size = UDim2.new(0, 400, 0, 35)
eggBox.BackgroundColor3 = Color3.fromRGB(43, 49, 55)
eggBox.TextColor3 = Color3.fromRGB(255, 255, 255)
eggBox.Text = 'ü•ö Egg Name'
eggBox.Font = Enum.Font.GothamBold
eggBox.TextSize = 16
eggBox.TextXAlignment = Enum.TextXAlignment.Center
createCorner(10).Parent = eggBox
addToPage('Hatching', eggBox)

createToggleButton('Hatching', 'Auto Hatch', flags.autoHatch)

createSectionTitle('Misc', 'üîπ Miscellaneous')

function TeleportDropdown()
    local dropdownFrame = Instance.new('Frame')
    dropdownFrame.Size = UDim2.new(0, 400, 0, 40)
    dropdownFrame.Position = UDim2.new(0, 0, 0, 40)
    dropdownFrame.BackgroundColor3 = Color3.fromRGB(43, 49, 55)
    dropdownFrame.ZIndex = 1

    createCorner(10).Parent = dropdownFrame

    local selected = Instance.new('TextButton')
    selected.Size = UDim2.new(1, 0, 1, 0)
    selected.BackgroundTransparency = 1
    selected.Text = 'Select Island'
    selected.Font = Enum.Font.GothamBold
    selected.TextSize = 18
    selected.TextColor3 = Color3.fromRGB(255, 255, 255)
    selected.Parent = dropdownFrame
    selected.AutoButtonColor = false

    local listFrame = Instance.new('Frame')
    listFrame.Size = UDim2.new(0, 400, 0, 0)
    listFrame.Position = UDim2.new(0, 0, 1.2, 0)
    listFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    listFrame.Visible = false
    listFrame.ClipsDescendants = true
    listFrame.ZIndex = 3

    createCorner(10).Parent = listFrame
    listFrame.Parent = dropdownFrame

    local layout = Instance.new('UIListLayout')
    layout.Padding = UDim.new(0, 6)
    layout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    layout.VerticalAlignment = Enum.VerticalAlignment.Center
    layout.Parent = listFrame

    local islands = {
        {
            Name = 'üåç The Overworld',
            Path = 'Workspace.Worlds.The Overworld.PortalSpawn',
        },
        {
            Name = 'Floating Island',
            Path = 'Workspace.Worlds.The Overworld.Islands.Floating Island.Island.Portal.Spawn',
        },
        {
            Name = 'Outer Space',
            Path = 'Workspace.Worlds.The Overworld.Islands.Outer Space.Island.Portal.Spawn',
        },
        {
            Name = 'Twilight',
            Path = 'Workspace.Worlds.The Overworld.Islands.Twilight.Island.Portal.Spawn',
        },
        {
            Name = 'The Void',
            Path = 'Workspace.Worlds.The Overworld.Islands.The Void.Island.Portal.Spawn',
        },
        {
            Name = 'Zen',
            Path = 'Workspace.Worlds.The Overworld.Islands.Zen.Island.Portal.Spawn',
        },
        {
            Name = 'üé≤ Minigame Paradise',
            Path = 'Workspace.Worlds.Minigame Paradise.PortalSpawn',
        },
        {
            Name = 'Dice Island',
            Path = 'Workspace.Worlds.Minigame Paradise.Islands.Dice Island.Island.Portal.Spawn',
        },
        {
            Name = 'Minecart Forest',
            Path = 'Workspace.Worlds.Minigame Paradise.Islands.Minecart Forest.Island.Portal.Spawn',
        },
        {
            Name = 'Robot Factory',
            Path = 'Workspace.Worlds.Minigame Paradise.Islands.Robot Factory.Island.Portal.Spawn',
        },
        {
            Name = 'Hyperwave',
            Path = 'Workspace.Worlds.Minigame Paradise.Islands.Hyperwave Island.Island.Portal.Spawn',
        },
    }

    for _, island in ipairs(islands) do
        local option = Instance.new('TextButton')
        option.Size = UDim2.new(0.8, 0, 0, 30)
        option.BackgroundColor3 = Color3.fromRGB(43, 49, 55)
        option.TextColor3 = Color3.fromRGB(255, 255, 255)
        option.Font = Enum.Font.GothamBold
        option.TextSize = 20
        option.Text = island.Name
        option.Parent = listFrame
        option.AutoButtonColor = false
        option.ZIndex = 4

        createCorner(8).Parent = option

        option.MouseEnter:Connect(function()
            option.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        end)

        option.MouseLeave:Connect(function()
            option.BackgroundColor3 = Color3.fromRGB(43, 49, 55)
        end)

        option.MouseButton1Click:Connect(function()
            selected.Text = '' .. island.Name
            listFrame.Visible = false
            listFrame.Size = UDim2.new(0, 400, 0, 0)

            local args = {
                [1] = 'Teleport',
                [2] = island.Path,
            }

            RE:FireServer(unpack(args))
        end)
    end

    selected.MouseButton1Click:Connect(function()
        listFrame.Visible = not listFrame.Visible
        if listFrame.Visible then
            local children = #listFrame:GetChildren() - 1
            listFrame.Size = UDim2.new(0, 400, 0, children * 34)
        else
            listFrame.Size = UDim2.new(0, 400, 0, 0)
        end
    end)

    addToPage('Misc', dropdownFrame)
end

TeleportDropdown()

function registersc(category, label, emoji, url)
    createButton(category, emoji .. ' ' .. label, function()
        loadstring(game:HttpGet(url))()
    end)
end

registersc(
    'Misc',
    'Competitive Script',
    'üèÜ',
    'https://raw.githubusercontent.com/Inforestly/yay/refs/heads/main/bgsi4'
)
registersc(
    'Misc',
    'Dice Script',
    'üé≤',
    'https://raw.githubusercontent.com/Inforestly/yay/refs/heads/main/bgsi3'
)
registersc(
    'Misc',
    'Claw Script',
    'üïπÔ∏è',
    'https://raw.githubusercontent.com/Inforestly/yay/refs/heads/main/bgsi2'
)
registersc(
    'Misc',
    'Infinite Yield',
    '‚ôæÔ∏è',
    'https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'
)

registersc(
    'Misc',
    'Trick Or Treat Script',
    'üç¨',
    'https://raw.githubusercontent.com/Inforestly/yay/refs/heads/main/bgsi6'
)

registersc(
    'Misc',
    'Hide Transition Screen',
    'üíª',
    'https://raw.githubusercontent.com/Inforestly/yay/refs/heads/main/bgsi5'
)

function buyFromShop(shopName, slotCount)
    for slotIndex = 1, slotCount do
        RE:FireServer('BuyShopItem', shopName, slotIndex, true)
        task.wait(0.01)
    end
end

local automationTasks = {
    {
        flag = flags.autoPlaytime,
        func = function()
            RE:FireServer('ClaimAllPlaytime')
        end,
        waitTime = 0.01,
    },

    {
        flag = flags.autoShops,
        func = function()
            buyFromShop('alien-shop', 3)
            buyFromShop('shard-shop', 3)
            buyFromShop('dice-shop', 3)
            buyFromShop('festival-shop', 3)
        end,
        waitTime = 0.01,
    },


    {
        flag = flags.autoBubble,
        func = function()
            RE:FireServer('BlowBubble')
        end,
        waitTime = 0,
    },

    {
        flag = flags.autoHatch,
        func = function()
            RE:FireServer('HatchEgg', eggBox.Text .. ' Egg', 12)
        end,
        waitTime = 0,
    },

    {
        flag = flags.autoChest,
        func = function()
            for _, chest in ipairs({
                'Void Chest',
                'Giant Chest',
                'Infinity Chest',
                'Ticket Chest',
            }) do
                RE:FireServer('ClaimChest', chest, true)
                task.wait(0.01)
            end
        end,
        waitTime = 0.01,
    },

    {
        flag = flags.autoUseKeys,
        func = function()
            RE:FireServer('UnlockRiftChest', 'golden-chest')
            RE:FireServer('UnlockRiftChest', 'royal-chest')
            RE:FireServer('UnlockRiftChest', 'dice-rift')
        end,
        waitTime = 0.01,
    },
}
for _, loopData in ipairs(automationTasks) do
    task.spawn(function()
        while true do
            if loopData.flag.state then
                loopData.func()
            end
            task.wait(loopData.waitTime)
        end
    end)
end

local background = Instance.new('Frame')
background.Size = UDim2.new(0.8, 0, 0.4, 0)
background.Position = UDim2.new(0.1, 0, 0.1, 0)
background.BackgroundColor3 = Color3.fromRGB(43, 49, 55)
background.BorderSizePixel = 0
background.Transparency = 1
createCorner(10).Parent = background
background.ZIndex = 2
addToPage('Hatching', background)

local scrollFrame = Instance.new('ScrollingFrame')
scrollFrame.Size = UDim2.new(0.8, 0, 0.9, 0)
scrollFrame.Position = UDim2.new(0.1, 0, 0.1, 0)
scrollFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
scrollFrame.BackgroundTransparency = 1
scrollFrame.BorderSizePixel = 0
scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
scrollFrame.ScrollBarThickness = 5
scrollFrame.ZIndex = 5
addToPage('Hatching', scrollFrame)

local listLayout = Instance.new('UIListLayout')
listLayout.Padding = UDim.new(0, 6)
listLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
listLayout.SortOrder = Enum.SortOrder.LayoutOrder
listLayout.Parent = scrollFrame

local padding = Instance.new('UIPadding')
padding.PaddingLeft = UDim.new(0.05, 0)
padding.PaddingRight = UDim.new(0.05, 0)
padding.Parent = scrollFrame

function updateRiftList()
    for _, child in ipairs(scrollFrame:GetChildren()) do
        if not child:IsA('UIListLayout') then
            child:Destroy()
        end
    end

    local riftFolder = Workspace:WaitForChild('Rendered'):WaitForChild('Rifts')
    local specialRifts = {}
    local normalRifts = {}

    function normalizeName(name)
        return name:lower():gsub('%s+', '-')
    end

    function extractLuck(rift)
        local display = rift:FindFirstChild('Display')
        if display then
            local surfaceGui = display:FindFirstChildWhichIsA('SurfaceGui')
            local icon = surfaceGui and surfaceGui:FindFirstChild('Icon')
            local luckLabel = icon and icon:FindFirstChild('Luck')
            if luckLabel and luckLabel:IsA('TextLabel') then
                local luckVal = tonumber(luckLabel.Text:match('%d+'))
                return luckVal or 0
            end
        end
        return 0
    end

    for _, rift in ipairs(riftFolder:GetChildren()) do
        if rift:IsA('Model') then
            local riftNameNormalized = normalizeName(rift.Name)
            local isSpecial = riftNameNormalized:find('gift')
                or riftNameNormalized:find('chest')
                or riftNameNormalized == 'bubble-rift'
                or riftNameNormalized == 'dice-rift'
            local riftData = { instance = rift, luck = extractLuck(rift) }
            if isSpecial then
                table.insert(specialRifts, riftData)
            else
                table.insert(normalRifts, riftData)
            end
        end
    end

    table.sort(normalRifts, function(a, b)
        return a.luck > b.luck
    end)
    table.sort(specialRifts, function(a, b)
        return a.luck > b.luck
    end)

    local function applyRainbowText(label)
        spawn(function()
            local hue = 0
            while label.Parent do
                hue = (hue + 0.01) % 1
                label.TextColor3 = Color3.fromHSV(hue, 1, 1)
                wait(0.05)
            end
        end)
    end

    function addRiftButton(riftData, isSpecial)
        local rift = riftData.instance
        local display = rift:FindFirstChild('Display')
        local luckText, timerText = '', ''

        if display then
            local gui = display:FindFirstChildWhichIsA('SurfaceGui')
            local icon = gui and gui:FindFirstChild('Icon')
            local luckLabel = icon and icon:FindFirstChild('Luck')
            local timerLabel = gui and gui:FindFirstChild('Timer')

            if luckLabel then
                luckText = luckLabel.Text
            end
            if timerLabel then
                timerText = timerLabel.Text
            end
        end

        local button = Instance.new('TextButton')
        button.Size = UDim2.new(0.95, 0, 0, 35)
        button.BackgroundColor3 = isSpecial and Color3.fromRGB(60, 60, 95)
            or Color3.fromRGB(45, 60, 45)
        button.AutoButtonColor = false
        button.TextColor3 = Color3.fromRGB(255, 255, 255)
        button.Font = Enum.Font.GothamBold
        button.TextSize = 16
        button.TextScaled = true
        button.Text = string.format(
            '%s  |  Luck: %s  |  %s',
            rift.Name,
            luckText,
            timerText
        )
        button.ZIndex = 10
        createCorner(12).Parent = button
        button.Parent = scrollFrame

        button.MouseEnter:Connect(function()
            button.BackgroundColor3 = isSpecial and Color3.fromRGB(70, 70, 110)
                or Color3.fromRGB(55, 75, 55)
        end)

        button.MouseLeave:Connect(function()
            button.BackgroundColor3 = isSpecial and Color3.fromRGB(60, 60, 95)
                or Color3.fromRGB(45, 60, 45)
        end)

        button.MouseButton1Click:Connect(function()
            local baseName = normalizeName(rift.Name)
            local bestRift, bestLuck = nil, -1

            for _, other in ipairs(rift.Parent:GetChildren()) do
                if normalizeName(other.Name) == baseName then
                    local L = extractLuck(other)
                    if L > bestLuck then
                        bestLuck = L
                        bestRift = other
                    end
                end
            end

            if not bestRift then
                return
            end

            local displayPart = bestRift:FindFirstChild('Output')
            if displayPart and displayPart:IsA('BasePart') then
                local up = displayPart.CFrame.UpVector
                local targetPos = displayPart.Position + up * 10
                teleportPos(targetPos, displayPart.Position)
            end
        end)
    end

    for _, riftData in ipairs(normalRifts) do
        addRiftButton(riftData, false)
    end

    if #specialRifts > 0 then
        local sep = Instance.new('TextLabel')
        sep.Size = UDim2.new(0.55, 0, 0, 16)
        sep.BackgroundTransparency = 0
        sep.TextColor3 = Color3.fromRGB(255, 255, 255)
        sep.Font = Enum.Font.GothamBold
        sep.TextSize = 16
        sep.TextScaled = true
        sep.Text = 'Test'
        sep.Visible = false
        sep.TextXAlignment = Enum.TextXAlignment.Center
        sep.Parent = scrollFrame
        sep.ZIndex = 5

        for _, riftData in ipairs(specialRifts) do
            addRiftButton(riftData, true)
        end
    end
end

task.spawn(function()
    while true do
        updateRiftList()
        task.wait(1)
    end
end)

function teleportPos(pos, lookAt)
    local character = LP.Character
    if character and character:FindFirstChild('HumanoidRootPart') then
        local hrp = character.HumanoidRootPart
        local hum = character:FindFirstChild('Humanoid')

        if hum then
            hum:ChangeState(Enum.HumanoidStateType.Physics)
            hum.PlatformStand = true

            for _, part in ipairs(character:GetDescendants()) do
                if part:IsA('BasePart') then
                    part.CanCollide = false
                end
            end

            hrp.CFrame = CFrame.new(pos, lookAt)

            task.delay(0.1, function()
                hum.PlatformStand = false
                hum:ChangeState(Enum.HumanoidStateType.GettingUp)
            end)
        end
    end
end
function RiftTP()
    local riftFolder = Workspace:WaitForChild('Rendered'):WaitForChild('Rifts')
    local targetLuck = luckbox.Text
    local targetName = eggname.Text

    local function normalizeName(name)
        return name:lower():gsub('%s+', '-')
    end

    local function isRiftExpired(display)
        local timerLabel = display:FindFirstChildWhichIsA('SurfaceGui')
            and display.SurfaceGui:FindFirstChild('Timer')
        if timerLabel and timerLabel:IsA('TextLabel') then
            local text = timerLabel.Text:lower()
            return text == '' or text:find('expired') or text:find('0s')
        end
        return true
    end

    local bestMatch = nil

    for _, rift in ipairs(riftFolder:GetChildren()) do
        if not rift:IsA('Model') then
            continue
        end

        local normalized = normalizeName(rift.Name)
        if normalized ~= targetName then
            continue
        end

        local display = rift:FindFirstChild('Display')
        if not display then
            continue
        end

        if not isRiftExpired(display) then
            bestMatch = rift
            break
        elseif not bestMatch then
            bestMatch = rift
        end
    end

    if not bestMatch then
        return
    end

    local display = bestMatch:FindFirstChild('Output')
    if display and display:IsA('BasePart') then
        local up = display.CFrame.UpVector
        local heightAbove = display.Size.Y / 2 + 8
        local targetPos = display.Position + up * heightAbove
        teleportPos(targetPos, display.Position)
    end
end

UIS.InputBegan:Connect(function(input, gp)
    if not gp and input.KeyCode == Enum.KeyCode.LeftControl then
        mainFrame.Visible = not mainFrame.Visible
    end
end)

LP.Idled:Connect(function()
    vu:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
    task.wait(0.5)
    vu:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
end)

print('Init - Eclipse Hub | v7.14b')
