
local Players = game:GetService('Players')
local TweenService = game:GetService('TweenService')
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild('HumanoidRootPart')

--// Config
local TWEEN_TIME = 0.4
local OFFSET = CFrame.new(0, 3, 0)
local DELAY_BETWEEN = 3.1
local LOOP_FOREVER = true

--// Create GUI
local screenGui = Instance.new('ScreenGui')
screenGui.Name = 'TeleportGUI'
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild('PlayerGui')

local frame = Instance.new('Frame')
frame.Size = UDim2.new(0, 240, 0, 150)
frame.Position = UDim2.new(0.5, -110, 0.4, -60)
frame.BackgroundColor3 = Color3.fromRGB(22, 22, 40)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true
frame.Parent = screenGui


-- Rounded corners
local corner = Instance.new('UICorner')
corner.CornerRadius = UDim.new(0, 8)
corner.Parent = frame

-- Close/Open Button
local closeBtn = Instance.new('TextButton')
closeBtn.Size = UDim2.new(0, 25, 0, 25)
closeBtn.Position = UDim2.new(1, -35, 0, 5)
closeBtn.Text = 'X'
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextSize = 20
closeBtn.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
closeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
closeBtn.Parent = frame


closeBtn.MouseButton1Click:Connect(function()
    frame.Visible = false
end)

-- Status Label
local statusLabel = Instance.new('TextLabel')
statusLabel.Size = UDim2.new(1, -10, 0, 25)
statusLabel.Position = UDim2.new(0, 5, 0.85, 0)
statusLabel.BackgroundTransparency = 1
statusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
statusLabel.Font = Enum.Font.GothamBold
statusLabel.TextSize = 18
statusLabel.Text = 'Status: ðŸŸ  Idle...'
statusLabel.TextXAlignment = Enum.TextXAlignment.Left
statusLabel.Parent = frame

-- Start Button
local startButton = Instance.new('TextButton')
startButton.Size = UDim2.new(0.8, 0, 0, 35)
startButton.Position = UDim2.new(0.1, 0, 0.2, 0)
startButton.Text = 'Start Teleport Loop'
startButton.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
startButton.TextColor3 = Color3.fromRGB(255, 255, 255)
startButton.Font = Enum.Font.GothamBold
startButton.TextSize = 20
startButton.Parent = frame

local startGradient = Instance.new('UIGradient')
startGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 200, 255)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 120, 255)),
})
startGradient.Rotation = 45
startGradient.Parent = startButton

local startCorner = Instance.new('UICorner')
startCorner.CornerRadius = UDim.new(0, 12)
startCorner.Parent = startButton

-- Stop Button
local stopButton = Instance.new('TextButton')
stopButton.Size = UDim2.new(0.8, 0, 0, 35)
stopButton.Position = UDim2.new(0.1, 0, 0.55, 0)
stopButton.Text = 'Stop Teleport Loop'
stopButton.BackgroundColor3 = Color3.fromRGB(255, 85, 85)
stopButton.TextColor3 = Color3.fromRGB(255, 255, 255)
stopButton.Font = Enum.Font.GothamBold
stopButton.TextSize = 20
stopButton.Parent = frame

local stopGradient = Instance.new('UIGradient')
stopGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 100, 100)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(200, 50, 50)),
})
stopGradient.Rotation = 45
stopGradient.Parent = stopButton

local stopCorner = Instance.new('UICorner')
stopCorner.CornerRadius = UDim.new(0, 12)
stopCorner.Parent = stopButton

--// Find all Activation Root parts
local housesFolder =
    workspace:WaitForChild('HalloweenEvent'):WaitForChild('Houses')
local activations = {}

for _, model in ipairs(housesFolder:GetDescendants()) do
    if
        model:IsA('BasePart')
        and model.Name == 'Root'
        and model.Parent.Name == 'Activation'
    then
        table.insert(activations, model)
    end
end

if #activations == 0 then
    warn('No Activation roots found!')
end

--// Tween function
local function tweenTo(cframe)
    local tweenInfo = TweenInfo.new(
        TWEEN_TIME,
        Enum.EasingStyle.Quart,
        Enum.EasingDirection.Out
    )
    local tween = TweenService:Create(hrp, tweenInfo, { CFrame = cframe })
    tween:Play()
    tween.Completed:Wait()
end

--// Loop control
local loopRunning = false

 function startLoop()
    if loopRunning then
        return
    end
    loopRunning = true
    statusLabel.Text = 'Status: ðŸŸ¢ Running...'
    spawn(function()
        while loopRunning do
            for _, rootPart in ipairs(activations) do
                if not loopRunning then
                    break
                end
                local target = rootPart.CFrame * OFFSET
                pcall(tweenTo, target)
                task.wait(DELAY_BETWEEN)
            end
        end
    end)
end

local function stopLoop()
    loopRunning = false
    statusLabel.Text = 'Status: ðŸŸ  Idle...'
end

--// Connect buttons
startButton.MouseButton1Click:Connect(startLoop)
stopButton.MouseButton1Click:Connect(stopLoop)
