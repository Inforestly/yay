local Players = game:GetService('Players')
local TweenService = game:GetService('TweenService')
local ReplicatedStorage = game:GetService('ReplicatedStorage')

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local hrp = character:WaitForChild('HumanoidRootPart')

-- Settings
local TELEPORT_TIME = 1
local DELAY_BETWEEN = 3.5
local loopRunning = false

-- Try to find the knock remote
local knockRemote

for _, v in ipairs(ReplicatedStorage:GetDescendants()) do
    if v:IsA('RemoteEvent') and v.Name:lower():find('knock') then
        knockRemote = v
        break
    end
end

-- UI
local screenGui = Instance.new('ScreenGui', player:WaitForChild('PlayerGui'))
screenGui.Name = 'TeleportGui'
screenGui.ResetOnSpawn = false

local frame = Instance.new('Frame', screenGui)
frame.Size = UDim2.new(0, 260, 0, 120)
frame.Position = UDim2.new(0.5, -130, 0.35, -50)
frame.BackgroundColor3 = Color3.fromRGB(20, 20, 35)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true
Instance.new('UICorner', frame).CornerRadius = UDim.new(0, 10)

local title = Instance.new('TextLabel', frame)
title.Size = UDim2.new(1, -10, 0, 28)
title.Position = UDim2.new(0, 5, 0, 5)
title.BackgroundTransparency = 1
title.Text = 'Halloween Auto Trick-Or-Treat'
title.Font = Enum.Font.GothamBold
title.TextSize = 18
title.TextColor3 = Color3.new(1, 1, 1)

local toggleBtn = Instance.new('TextButton', frame)
toggleBtn.Size = UDim2.new(0.85, 0, 0, 38)
toggleBtn.Position = UDim2.new(0.075, 0, 0.42, 0)
toggleBtn.BackgroundColor3 = Color3.fromRGB(60, 170, 255)
toggleBtn.TextColor3 = Color3.new(1, 1, 1)
toggleBtn.Font = Enum.Font.GothamBold
toggleBtn.TextSize = 20
toggleBtn.Text = 'Start'
Instance.new('UICorner', toggleBtn).CornerRadius = UDim.new(0, 10)

local statusLabel = Instance.new('TextLabel', frame)
statusLabel.Size = UDim2.new(1, -10, 0, 24)
statusLabel.Position = UDim2.new(0, 5, 0.78, 0)
statusLabel.BackgroundTransparency = 1
statusLabel.Text = 'Status: ðŸŸ  Idle'
statusLabel.Font = Enum.Font.GothamBold
statusLabel.TextSize = 16
statusLabel.TextColor3 = Color3.new(1, 1, 1)
statusLabel.TextXAlignment = Enum.TextXAlignment.Left

-- Find house activation pads
local activations = {}
local housesFolder =
    workspace:WaitForChild('HalloweenEvent'):WaitForChild('Houses')

for _, model in ipairs(housesFolder:GetDescendants()) do
    if
        model:IsA('BasePart')
        and model.Name == 'Root'
        and model.Parent.Name == 'Activation'
    then
        table.insert(activations, model)
    end
end

-- Tween function
local function tweenTo(cframe)
    local tweenInfo = TweenInfo.new(
        TELEPORT_TIME,
        Enum.EasingStyle.Linear,
        Enum.EasingDirection.Out
    )
    local tween = TweenService:Create(hrp, tweenInfo, { CFrame = cframe })
    tween:Play()
    tween.Completed:Wait()
end

-- Fire knock remote
local function knockDoor(root)
    if knockRemote then
        -- most trick-or-treat events expect position or house model
        pcall(function()
            knockRemote:FireServer(root.Position or root)
        end)
    end
end

-- Main loop
local function teleportLoop()
    while loopRunning do
        for _, root in ipairs(activations) do
            if not loopRunning then
                break
            end

            local targetCFrame = root.CFrame + Vector3.new(0, 2, 0)
            tweenTo(targetCFrame)
            knockDoor(root)

            task.wait(DELAY_BETWEEN)
        end
    end
end

-- Button toggle
toggleBtn.MouseButton1Click:Connect(function()
    loopRunning = not loopRunning
    if loopRunning then
        toggleBtn.Text = 'Stop'
        toggleBtn.BackgroundColor3 = Color3.fromRGB(255, 80, 80)
        statusLabel.Text = 'Status: ðŸŸ¢ Running'
        task.spawn(teleportLoop)
    else
        toggleBtn.Text = 'Start'
        toggleBtn.BackgroundColor3 = Color3.fromRGB(60, 170, 255)
        statusLabel.Text = 'Status: ðŸŸ  Idle'
    end
end)
